spring.datasource.url=jdbc:mysql://localhost:3306/food?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root

# Exibe logs no console das classes que estiverem nesse pacote (org.springframework) em debug
# P/ ver problemas na autenticação JWT encapsulados e ocultos do log pelo tratamento de exceções do próprio Spring
logging.level.org.springframework=debug

# Configurando chave pública para validação do token
# spring.security.oauth2.resourceserver.jwt.public-key-location=classpath:keys/food-pkey.pem
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/.well-known/jwks.json


# Security Config - Authorization Server
# Dados para criação da chave assimétrica
food.jwt.keystore.jks-location=base64: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
food.jwt.keystore.password=123456
food.jwt.keystore.keypair-alias=food

# Configurando endereço do Authorization Server para verificação de Access Token
#spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=http://localhost:8081/oauth/check_token
#spring.security.oauth2.resourceserver.opaquetoken.client-id=checktoken
#spring.security.oauth2.resourceserver.opaquetoken.client-secret=check123

# Loggly - utilizado em logback-spring.xml
logging.loggly.token=bef1f4f2-b892-4684-8427-d46886850ea2

# Indica pasta onde Flyway encontra arquivos. Em produção deve ser comentado
spring.flyway.locations=classpath:db/migration,classpath:db/testdata

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Habilita erro ao receber json com propriedade inexistente na entidade
spring.jackson.deserialization.fail-on-unknown-properties=true

# Habilita erro ao receber json com valor em propriedade anotada com @JsonIgnore
spring.jackson.deserialization.fail-on-ignored-properties=true

# Habilita excecao ao receber uma requisicao com valor nao encontrado
spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false

# Respostas a partir de 2KB serão comprimidas com GZIP
spring.compression.enabled=true

#Configura limite da tamanho de arquivo em toda a aplicação
#spring.servlet.multipart.max-file-size=20KB #padrão 1MB por arquivo
#spring.servlet.multipart.max-request-size=20MB #padrão 10MB por request

# Habilitar cores do banner
spring.output.ansi.enabled=always

#Tipo de armazenamento de arquivos
#food.storage.tipo=local
food.storage.tipo=s3

# Path do local de armazenamento local de imagens da Api
food.storage.local.diretorio-fotos=C:\\Users\\ACT\\Pictures\\food-api

# Amazon S3
food.storage.s3.id-chave-acesso=${CHAVE_ID}
food.storage.s3.chave-acesso-secreta=${CHAVE_SECRETA}
food.storage.s3.bucket=food-kami
food.storage.s3.regiao=us-east-2
food.storage.s3.diretorio-fotos=catalogo

# Email
spring.mail.host=smtp.sendgrid.net
spring.mail.port=587
spring.mail.username=apikey
spring.mail.password=${EMAIL_PASSWORD}

food.email.remetente=FoodKamila <kamilardg@gmail.com>
#Implementações: fake, sandbox, smtp
food.email.impl=sandbox
food.email.sandbox.destinatario=ist.kamila.serpa@gmail.com

# Inserindo local ao FreeMarker para currency em reais no Html
spring.freemarker.settings.locale=pt_BR
