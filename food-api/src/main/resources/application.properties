#server.port=8081
spring.application.name=food.api
#spring.sleuth.log.slf4j.enabled=true
#logging.level.org.springframework.web.servlet.DispatcherServlet=DEBUG

spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}/food?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Configurando chave pública para validação do token
# spring.security.oauth2.resourceserver.jwt.public-key-location=classpath:keys/food-pkey.pem
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/.well-known/jwks.json

# Desativa a utillização do Spring Session para utilizar apenas no container Docker balanceando carga
spring.session.store-type=none

# Habilita erro ao receber json com propriedade inexistente na entidade
spring.jackson.deserialization.fail-on-unknown-properties=true

# Habilita erro ao receber json com valor em propriedade anotada com @JsonIgnore
spring.jackson.deserialization.fail-on-ignored-properties=true

# Habilita excecao ao receber uma requisicao com valor nao encontrado
spring.mvc.throw-exception-if-no-handler-found=true
spring.resources.add-mappings=false

# Respostas a partir de 2KB serão comprimidas com GZIP
spring.compression.enabled=true

# Habilitar cores do banner
spring.output.ansi.enabled=always

# Path do local de armazenamento local de imagens da Api
food.storage.local.diretorio-fotos=C:\\Users\\ACT\\Pictures\\food-api

# Inserindo local ao FreeMarker para currency em reais no Html
spring.freemarker.settings.locale=pt_BR

#-----------------------------------------------------

# Configurando endereço do Authorization Server para verificação de Access Token
#spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=http://localhost:8081/oauth/check_token
#spring.security.oauth2.resourceserver.opaquetoken.client-id=checktoken
#spring.security.oauth2.resourceserver.opaquetoken.client-secret=check123

# Loggly - utilizado em logback-spring.xml
# logging.loggly.token=bef1f4f2-b892-4684-8427-d46886850ea2

#Configura limite da tamanho de arquivo em toda a aplicação
#spring.servlet.multipart.max-file-size=20KB #padrão 1MB por arquivo
#spring.servlet.multipart.max-request-size=20MB #padrão 10MB por request

# Exibe logs no console das classes que estiverem nesse pacote (org.springframework) em debug
# P/ ver problemas na autenticação JWT encapsulados e ocultos do log pelo tratamento de exceções do próprio Spring
# logging.level.org.springframework=debug
